name: PHP Composer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    # Limpando cache do composer e removendo o diretório vendor
    - name: Clear Composer Cache
      run: |
        composer clear-cache
        rm -rf ./api/vendor
      
    # Instalando composer
    - name: Install Composer
      run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php composer-setup.php --install-dir=./api --filename=composer
        php -r "unlink('composer-setup.php');"

    - name: Update Composer.lock
      working-directory: ./api
      run: composer update --lock

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      working-directory: ./api
      run: composer install --prefer-dist --no-progress
      
    # Instalando PHPUnit
    - name: Install PHPUnit
      working-directory: ./api
      run: composer require --dev phpunit/phpunit
      
    # Informações de depuração da execução do PHPUnit
    - name: Debug Info
      run: |
        php -v
        .api/vendor/bin/phpunit --version  
    
    - name: Run PHPUnit Test
      working-directory: ./api/tests
      run: php artisan test

    # Qualidade de Código
    #- name: Run PHP CodeSniffer
     # run: vendor/bin/phpcs
